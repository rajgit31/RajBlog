<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>rajitha_kba</author>
  <title>Practical approach to Unit Testing</title>
  <description />
  <content>&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;This article explains some key approaches that you would consider when writing Unit Tests. &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;As developers most of us write Unit Tests and we all know what is a &lt;strong&gt;&lt;em&gt;Unit Test&lt;/em&gt;&lt;/strong&gt;. Some may have slightly different opinions, but it is actually a programmatic verification of a single method/unit to ensure it behaves as expected. The reason I explain this because some developers still refers to a &lt;em&gt;Unit&lt;/em&gt; is a component, assembly, or a module. When to comes to the term Unit Testing, you really testing a sensible testable unit of your software, and anything bigger than that would considered to be more of a integration testing.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 12pt;"&gt;&lt;span style="font-family: Arial;"&gt;&lt;span style="font-size: small;"&gt;Benefits&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Lets get real and discuss some of the benefits. I want to be more practical, and leave the MSDN Unit Testing benefits behind.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;As a developer when you decide to write Unit Tests, do you ask the question from yourself, &lt;em&gt;why I&amp;rsquo;m really writing these Unit Tests&lt;/em&gt;? Some of you answer &lt;em&gt;Yes&lt;/em&gt;, and some of you say &lt;em&gt;No.&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Answer &lt;em&gt;No&lt;/em&gt;, is simply because not knowing what you do, or because everyone else write Unit Tests. If your answer is &lt;em&gt;Yes, &lt;/em&gt;that&amp;rsquo;s great, and you really consider the pros and cons of having Unit Tests.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;All these benefits can be categorized into 3 main areas.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt;"&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;1.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Quality.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt;"&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;2.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Design.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt;"&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;3.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Cost benefits.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Lets talk about these areas briefly.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;The quality that provides by the Unit Tests can be many ways. It assists developing testable code. With TDD, the method/function that you write against a Unit Test, is well defined, and has a single responsibility. Unit Tests it self provide a valuable documentation to the project.&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;Less bugs will be introduced, also fixing bugs will be lot easier. As a developer you will have a great confidence on your system.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;If you practice TDD, you know Unit Test allows you to design a specific behaviour within your method. For example with TDD, you write your test first, make it fails, and then based on your test you write the method to ensure that your test passes. The result of this is basically designing a specific behaviour within your method. The other aspect of the &lt;em&gt;Design&lt;/em&gt; is, when you design your system, you will also consider your functional requirements. Because one of the things that you need to ensure when you design your system is that your functional requirements have been met. Your Unit Tests are based on these functional requirements. I will discuss this in more detail in &amp;ldquo;&lt;strong&gt;&lt;em&gt;Selective Unit Testing&lt;/em&gt;&lt;/strong&gt;&amp;rdquo; section.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;We would love to develop a perfect system. But in reality, that is not always the case. Worse and the painful thing is some time projects are over the budget. This could be due to number of factors. One of the most common issues associated with the project cost is unexpected work at the end of the development cycle. This could be due to the number of bugs that have been raised during system testing. The number of iterations between the development and system testing cycles seems never ending due to the amount of bugs been raised. This can be due to poor system design, and or un-testable code.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt; mso-ansi-language: EN-AU; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA"&gt;Please refer to the graph below. (Please refer to the&amp;nbsp;article on&amp;nbsp;&lt;em&gt;"&lt;a href="http://www.agitar.com/solutions/why_unit_testing.html" target="_blank"&gt;Why Unit Testing&lt;/a&gt;"&lt;/em&gt;&amp;nbsp; for more information.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;As you can see here, the number of defects you find is high during the development and the cost to fix those defects is relatively low when comparing to further stage of project life cycle. This is why the Unit Tests are important to ensure that we introduce fewer bugs during the development so the cost to fix those bugs are negligible at the later stage of the project cycle. &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 12pt;"&gt;&lt;span style="font-family: Arial;"&gt;&lt;span style="font-size: small;"&gt;Selective Unit Testing&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Writing &amp;ldquo;Unit Tests&amp;rdquo; is a good thing. Writing bad Unit Tests and/or unnecessary Unit Tests can lead to considerably high maintenance cost to your overall project. Do you believe on statements such as &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;ldquo;&lt;em&gt;We should aim for 100% code coverage&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;Any Unit Test is better than none&lt;/em&gt;&amp;rdquo;, or &amp;ldquo;&lt;em&gt;Our main priority is the Unit Testing&lt;/em&gt;&amp;rdquo;?. All these statements do not add much value at all. These are some examples of expressing the way of the excitement, which causes by the &lt;em&gt;Unit Testing&lt;/em&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoBodyText" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: x-small; font-family: Arial;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt; mso-ansi-language: EN-AU; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;Few years ago we hired a developer to one of our projects. He is very keen on Unit Testing and he spent lot of time writing and managing Unit Tests. At the end our project was over the budget, and not what we really expected. If he decided what is really important, and write only the necessary Unit Tests, it would have reduced our cost.&lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;If you are aiming to write Unit Tests for every method to make your manager happy with higher code coverage, then it is fantastic to write these types of tests. But did you know that most of your tests did not add much value to the quality of your system at all. You see your entire tests pass with green ticks. There are so many green ticks make you feel good. Someone could argue that &amp;ldquo;&lt;em&gt;All the tests are there to ensure that every method behave as expected when it runs&amp;rdquo;&lt;/em&gt;.&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;Well not necessarily correct. Did you consider if you have to make a change to a component how much re-factoring need to be carried out? &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Let&amp;rsquo;s explain this with an example. When you have an obvious method, which takes a &lt;em&gt;String&lt;/em&gt; parameter and returns a &lt;em&gt;Boolean&lt;/em&gt;, and there are 100 methods calling this simple method, change to this method to return a &lt;em&gt;String&lt;/em&gt; would require changing all those 100 methods. How about the repetition? Your Unit Test probably written to ensure that calling method takes a &lt;em&gt;String&lt;/em&gt; value and returns a &lt;em&gt;Boolean. &lt;/em&gt;Isn&amp;rsquo;t this repeating the same thing? How about the DRY? The time you have spent to write this Unit Test, you should have spent for some important task such as analysing some business requirements.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Consider the future maintenance cost for both production code and all these Unit Tests? The amount of time you need to write Unit Tests for every single method, the amount of time you have to spend to write tests for complicated methods, which add no obvious benefits to the design of the system. They do not add any value at all.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;You may also reluctant to make changes to your code because of the amount to Unit Tests and the fear of breaking them.&lt;/span&gt;&lt;/p&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/h3&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/h3&gt;
&lt;h3 style="margin: 0cm 0cm 0pt;"&gt;&lt;strong&gt;&lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: Arial;"&gt;&lt;span style="font-size: large;"&gt;Decisions&lt;em&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;So how you decide what Unit Tests to write. In order to decide this, you need to understand the types of methods you would normally write within your application.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2010%2f5%2fUntitled.jpg" alt="" width="680" height="354" /&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;1.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Simple methods &lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;ndash; These methods are very obvious and simple. Just by having a look at code you can clearly see what it does.&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;The code it self explains the design of it.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 18pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; color: gray; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;///&lt;/span&gt;&lt;span style="font-size: 9.5pt; color: green; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; color: gray; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; Gets the first name from fulllname.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; &lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; &lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;param name="fullName"&amp;gt;&lt;/span&gt;&lt;span style="color: green;"&gt;The full name.&lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; &lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span style="color: green;"&gt;First Name&lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;public&lt;/span&gt; &lt;span style="color: blue;"&gt;string&lt;/span&gt; GetFirstNameFromFulllname(&lt;span style="color: blue;"&gt;string&lt;/span&gt; fullName)&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;if&lt;/span&gt; (&lt;span style="color: blue;"&gt;string&lt;/span&gt;.IsNullOrEmpty(fullName))&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;return&lt;/span&gt; &lt;span style="color: blue;"&gt;string&lt;/span&gt;.Empty;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;return&lt;/span&gt; fullName.Substring(0, fullName.IndexOf(&lt;span style="color: #a31515;"&gt;" "&lt;/span&gt;)); &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 18pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 31.5pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;If you perform additional design and verification through Unit Testing, this method will give you a minimal benefit.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 31.5pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;So if the method is simple and the design is obvious, you don&amp;rsquo;t need a Unit Test. If you are a TDD partitioner, the concept is the same. You do not need to write tests for every method you write within your application.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 31.5pt;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;2.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Components that are already tested&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt; &amp;ndash; I see some developers trying test components that have already been tested by the framework.&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; color: gray; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;///&lt;/span&gt;&lt;span style="font-size: 9.5pt; color: green; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; color: gray; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; Adds the companies to cache.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; &lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color: gray;"&gt;///&lt;/span&gt;&lt;span style="color: green;"&gt; &lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;param name="companyList"&amp;gt;&lt;/span&gt;&lt;span style="color: green;"&gt;The company list.&lt;/span&gt;&lt;span style="color: gray;"&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;public&lt;/span&gt; &lt;span style="color: blue;"&gt;void&lt;/span&gt; AddCompaniesToCache(&lt;span style="color: #2b91af;"&gt;IList&lt;/span&gt;&amp;lt;&lt;span style="color: #2b91af;"&gt;Company&lt;/span&gt;&amp;gt; companyList)&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;if&lt;/span&gt; (companyList != &lt;span style="color: blue;"&gt;null&lt;/span&gt; &amp;amp;&amp;amp; companyList.Count() &amp;gt; 0)&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 108pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;HttpContext.Cache.Add(&lt;span style="color: #a31515;"&gt;"companyCahchkey"&lt;/span&gt;, companyList, &lt;span style="color: blue;"&gt;null&lt;/span&gt;, &lt;span style="color: #2b91af;"&gt;Cache&lt;/span&gt;.NoAbsoluteExpiration, &lt;span style="color: blue;"&gt;new&lt;/span&gt; &lt;span style="color: #2b91af;"&gt;TimeSpan&lt;/span&gt;(0, 15, 0), &lt;span style="color: #2b91af;"&gt;CacheItemPriority&lt;/span&gt;.Normal, &lt;span style="color: blue;"&gt;null&lt;/span&gt;); &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;The real purpose of this method is to add a list of companies to cache. A test would be to ensure the list is added to the cache. Why would do you need to write Unit Tests against this method when the ASP.NET caching &amp;ndash; &lt;em&gt;Cache &lt;/em&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&lt;/span&gt;is already tested for its capabilities. You can also see this method is very simple and hence Unit Tests are not required.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;3.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Complex methods and have no value to the design at all&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt; &amp;ndash;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;For example you may have a method that writes to a registry using a complex pattern, and then using a complex algorithm to generate some custom strings, then serializes the data before calling a web service.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;It will be very exhaustive exercise to write dependencies for some of these complex methods. There are so many things and variations to consider. These methods are not related to your main design or requirements but to assist or help other methods to get the job done.&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;Most of these methods are self-contained algorithms.&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 18pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 18pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;4.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;High Level methods&lt;/strong&gt; &amp;ndash; There are methods within your application that integrated or calls other Units of methods.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 36pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; color: blue; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;public&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt; &lt;span style="color: blue;"&gt;void&lt;/span&gt; ManageResourceData(&lt;span style="color: blue;"&gt;string&lt;/span&gt; resources)&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;if&lt;/span&gt; (&lt;span style="color: blue;"&gt;string&lt;/span&gt;.IsNullOrEmpty(resources))&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;throw&lt;/span&gt; &lt;span style="color: blue;"&gt;new&lt;/span&gt; &lt;span style="color: #2b91af;"&gt;ArgumentNullException&lt;/span&gt;(&lt;span style="color: #a31515;"&gt;"resources"&lt;/span&gt;);&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="color: blue;"&gt;string&lt;/span&gt; retResourceValues = MergeResources(resources);&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;SaveResourcesToAFile(resources);&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;EmailReaources(resources);&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;AddResourcesToDatabase(resources);&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;SetUserPermission();&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-layout-grid-align: none;"&gt;&lt;span style="font-size: 9.5pt; font-family: Consolas; mso-ansi-language: EN-US;" lang="EN-US"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;As you see here there are few units of methods being called. Writing Unit Tests for these types of methods, often waist of time.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt; text-indent: -18pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;5.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Complex methods with so many dependencies&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Some refer to this as GOD methods. Most TDD practitioners not experience these type of methods as they would to like to perform one assert per single method. Also methods are smaller and always written for a single responsibility. You might come across with a situation where complex method with so many dependencies. The method itself performs so many other things and need to be re-factored in order to make it more testable. You can see these methods really hard to Unit Tests. You have two options&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 36pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 72pt; text-indent: -18pt; mso-list: l2 level2 lfo3; tab-stops: list 72.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;a.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Re-factor your method and consider using interfaces, so you can mock all your dependencies during Unit Test.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt 72pt; text-indent: -18pt; mso-list: l2 level2 lfo3; tab-stops: list 72.0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;b.&lt;span style="font: 7pt &amp;quot;Times New Roman&amp;quot;;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;Simply do not waist your time to write the Unit Test. You may not have enough time to re-factor, and you can spend this time for something more useful.&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;So the next important question is &amp;ldquo;&lt;em&gt;What types of methods that you write Unit Tests against?&amp;rdquo;&lt;/em&gt;. The answer is not simple, which why you need to think carefully, before you write Unit Tests.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: 9pt; font-family: Arial; mso-bidi-font-size: 12.0pt; mso-ansi-language: EN-AU; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;If you an application author, you would consider writing Unit Tests against the method that actually define your requirements. The focus should be to write methods with less number of dependencies by providing a single responsibility, while focusing on a specific requirement. Your dependencies should be easily mockable. The same consideration is applied if you are practicing TDD. When you implement your method with, then to pass your Unit Test, you should consider it as defining a specific requirement. If not, the test it self does not add value to your application.&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2010%2f5%2fselectiveUTCostBenifitJ.jpg" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;The above graph displays the number of Unit Tests increases with the requirements. The more requirements you have the more Unit Tests you should have. &lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;For example you may have a high level requirement to write a Banking application where customer performs banking operations. When you design your application, you will consider more detail requirements, such as customers should be able to withdraw, deposit, transfer, print statements within your application. Regardless of wether you are TDD practitioner or not, you should consider writing Unit Tests for withdraw, deposit, transfer and print statements. By doing this you add the &lt;em&gt;real &lt;/em&gt;quality to your application. You will have the confidence that your application performs as expected from the Unit Level.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;You should not consider writing Unit Tests for any algorithms that may have to calculate your balances, encryptions, serializations, locked/isolated, or wether the database get initialised. These are some of the examples that you should avoid as they do not add much values your Unit Tests.&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="MARGIN: 0cm 0cm 0pt"&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;If you framework author you would consider writing Unit Tests ensure that the methods you have written confirms to the key design principles of your framework. Framework author should target the requirements, which provided by the design of the framework. For example, you are developing a resource management framework, and you need to ensure the developer who uses the framework could successfully retrieve images from your resource management system. So you would write a Unit Test to ensure that developers can retrieve images as expected.&lt;/span&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt; mso-ansi-language: EN-AU; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA"&gt;I do not say that we should avoid Unit Tests and should not practice TDD. They both provide some real benefits to the application. However having unnecessary code / Uni Tests leads to more maintenance, and extra cost to projects.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin: 0cm 0cm 0pt;"&gt;&lt;span style="font-size: 10pt; font-family: Arial; mso-bidi-font-size: 12.0pt;"&gt;This is where it is really important that we need to ensure we write the absolutely necessary Unit Tests. This is also applicable if you practice TDD. You just don&amp;rsquo;t need to write Unit Tests for every method you write with in your application. Lets see some of these characteristics, and then how you decide what Unit Tests to write.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2010-05-08 20:08:00</pubDate>
  <lastModified>2010-08-21 12:41:03</lastModified>
  <raters>1</raters>
  <rating>5</rating>
  <slug>Practical-approach-to-Unit-Testing</slug>
  <tags />
  <comments>
    <comment id="87cf48c9-9535-4f42-90b1-7d9a02083101" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-05-30 10:29:04</date>
      <author>rajsoftware.wordpress.com</author>
      <email>pingback</email>
      <country />
      <ip>66.135.48.240</ip>
      <website>http://rajsoftware.wordpress.com/2010/05/30/my-recent-posts/</website>
      <moderatedby>Rule:white list</moderatedby>
      <content>Pingback from rajsoftware.wordpress.com

My recent posts&amp;#8230; &amp;laquo; Raj Aththanayake&amp;#039;s Blog</content>
    </comment>
    <comment id="6f2b559a-0f79-46ac-8ae1-970ed52b9ee3" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-07-10 14:14:19</date>
      <author>Eboni Naclerio</author>
      <email>Lucarell@tiscali.co.uk</email>
      <country>us</country>
      <ip>174.34.169.184</ip>
      <website>http://www.sportingtimes.org/tag/funk/</website>
      <moderatedby>StopForumSpam</moderatedby>
      <avatar />
      <content>Pretty impressive article. I just stumbled upon your site and wanted to say that I have really enjoyed reading your opinions. Any way I'll be coming back and I hope you post again soon.</content>
    </comment>
    <comment id="60e35909-a61c-400f-a758-44a94927ad3a" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-09-15 19:58:01</date>
      <author>real estate management software</author>
      <email>submission@gomasterkey.com</email>
      <country>us</country>
      <ip>125.209.123.134</ip>
      <website>http://www.gomasterkey.com/</website>
      <moderatedby>Rule:white list</moderatedby>
      <avatar />
      <content>Thanks for very interesting post. I have a high regard for the valuable information you offer in your articles. I really believe you will do much better in the future.</content>
    </comment>
    <comment id="10dab571-4dcb-403e-b253-84f7336a0bb4" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-10-18 20:02:04</date>
      <author>office in Dubai </author>
      <email>servcorp.me@gmail.com</email>
      <country>ae</country>
      <ip>125.209.123.134</ip>
      <website>http://www.servcorp.me/serviced-virtual-offices/uae/dubai/index.html</website>
      <moderatedby>Rule:white list</moderatedby>
      <avatar />
      <content>Thanks for sharing this great article! I feel strongly about it and love learning more on this topic. It is extremely helpful for me. I hope you post again soon</content>
    </comment>
    <comment id="c9dfa0b2-38dc-457e-94db-c9c498e60550" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-11-06 02:42:24</date>
      <author>95 mortgages</author>
      <email>william@threeiao.com</email>
      <country>gb</country>
      <ip>92.9.184.242</ip>
      <website>http://www.95-mortgages.com/</website>
      <moderatedby>StopForumSpam</moderatedby>
      <avatar />
      <content>I'd really like a green house with solar panels.</content>
    </comment>
    <comment id="46577de9-d148-41d3-8478-1bf6aef3b2ec" parentid="00000000-0000-0000-0000-000000000000" approved="True">
      <date>2010-11-06 02:43:33</date>
      <author>95 mortgages</author>
      <email>angel@fageg.com</email>
      <country>gb</country>
      <ip>92.9.184.242</ip>
      <website>http://www.95-mortgages.com/</website>
      <moderatedby>Rule:white list</moderatedby>
      <avatar />
      <content>so that is how you do it.</content>
    </comment>
  </comments>
  <categories>
    <category>fd41e292-56d9-4b00-85ad-dc53bbdaee74</category>
    <category>12448c79-381f-4996-a557-1167a36eaf18</category>
  </categories>
  <notifications />
</post>